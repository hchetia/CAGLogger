library(ShortRead)
library(ggplot2)
#function
extract_cag_structures_with_modified_errors <- function(seq) {
  pattern <- "(CAG|CA[ATCG]|C[ATCG]G|[ATCG]AG)+"
  matches <- gregexpr(pattern, seq, perl = TRUE)
  structures <- regmatches(seq, matches)
  
  has_substitution <- function(triplet) {
    sum(sapply(1:3, function(i) substr(triplet, i, i) != substr("CAG", i, i))) > 0
  }
  validate_triplets <- function(match) {
    triplets <- strsplit(match, "(?<=.{3})", perl = TRUE)[[1]]
    triplets <- sapply(triplets, as.character)
    type_a_error_count <- 0
    type_b_error_count <- 0
    
    for (i in 1:length(triplets)) {
      if (has_substitution(triplets[i])) {
        type_a_error_count <- type_a_error_count + 1
        if (i > 1 && has_substitution(triplets[i - 1])) {
          type_b_error_count <- type_b_error_count + 1
        }
      }
    }
    
    return(type_a_error_count <= 3 && type_b_error_count <= 1)
  }
  
  sapply(structures, function(match_group) {
    valid_matches <- Filter(validate_triplets, match_group)
    lengths <- nchar(valid_matches) / 3
    lengths[lengths > 0]
  })
}
#process
process_fastq_file <- function(fastq_path) {
  fastq_data <- readFastq(fastq_path)
  sequences <- sread(fastq_data)
  structure_list <- lapply(as.character(sequences), extract_cag_structures_with_modified_errors)
  structure_tally <- table(unlist(structure_list))
  structure_df <- data.frame(Structure = names(structure_tally), Frequency = as.integer(structure_tally))
  #Total reads
  total_reads <- sum(structure_df$Frequency)
  #Count reads with CAG repeat size over 40 and over 100
  frequency_over_40 <- sum(structure_df[structure_df$Structure > 40, "Frequency"])
  frequency_over_100 <- sum(structure_df[structure_df$Structure > 100, "Frequency"])
  frequency_over_113 <- sum(structure_df[structure_df$Structure > 113, "Frequency"])
  #Calculate percentage of reads with CAG repeat size over 100
  percent_over_100 <- (frequency_over_100 / total_reads) * 100
  percent_over_113 <- (frequency_over_113 / total_reads) * 100
  #Save metrics to a CSV file
  metrics_df <- data.frame(
    File = fastq_path,
    Total_Reads = total_reads,
    Frequency_Over_40 = frequency_over_40,
    Frequency_Over_100 = frequency_over_100,
    Frequency_Over_113 = frequency_over_113,
    Percent_Over_100 = percent_over_100,
    Percent_Over_113 = percent_over_113
  )
  metrics_csv_filename <- gsub("\\.fastq.gz$", "_cag_repeat_MODmetrics.csv", fastq_path)
  write.csv(metrics_df, metrics_csv_filename, row.names = FALSE)
  csv_filename <- gsub("\\.fastq.gz$", "_cag_structure_MODcounts.csv", fastq_path)
  write.csv(structure_df, csv_filename, row.names = FALSE)
  structure_df <- structure_df[structure_df$Frequency > 0, ]
  structure_df$Structure <- as.numeric(as.character(structure_df$Structure))
  structure_df <- structure_df[order(structure_df$Structure), ]
  # Filter out CAG repeats less than 15 in length
  structure_df <- structure_df[structure_df$Structure >= 15, ]
  bar_plot <- ggplot(structure_df, aes(x = Structure, y = Frequency)) +
    geom_bar(stat = "identity", fill = "purple") +
    labs(title = "Frequency of (CAG)n Repeat size", x = "(CAG)n Repeat Size", y = "Frequency") + 
    scale_x_continuous(breaks = seq(0, max(structure_df$Structure), by = 5)) + 
    theme_classic()
  range_text <- paste("The range of CAG repeat size detected is", min(structure_df$Structure), "to", max(structure_df$Structure), ".")
  bar_plot2 <- bar_plot + annotate("text", x = Inf, y = Inf, label = range_text, hjust = 1.1, vjust = 1.1, size = 10, angle = 0, color = "black") 
  png_filename <- gsub("\\.fastq.gz$", "_MODcag_frequencyplot.png", fastq_path)
  ggsave(png_filename, plot = bar_plot2, width = 15, height = 15, device = "png")
}
# Set your working directory if needed
fastq_files <- list.files(pattern = "\\.fastq.gz$")
for (file in fastq_files) {
  process_fastq_file(file)
}
